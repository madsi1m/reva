// Copyright 2018-2020 CERN
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// In applying this license, CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filesendersvc.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloResponse struct {
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{1}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadChunkRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length               int64    `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadChunkRequest) Reset()         { *m = ReadChunkRequest{} }
func (m *ReadChunkRequest) String() string { return proto.CompactTextString(m) }
func (*ReadChunkRequest) ProtoMessage()    {}
func (*ReadChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{2}
}

func (m *ReadChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadChunkRequest.Unmarshal(m, b)
}
func (m *ReadChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadChunkRequest.Marshal(b, m, deterministic)
}
func (m *ReadChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadChunkRequest.Merge(m, src)
}
func (m *ReadChunkRequest) XXX_Size() int {
	return xxx_messageInfo_ReadChunkRequest.Size(m)
}
func (m *ReadChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadChunkRequest proto.InternalMessageInfo

func (m *ReadChunkRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *ReadChunkRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadChunkRequest) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

type ReadChunkResponse struct {
	Error                int32    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadChunkResponse) Reset()         { *m = ReadChunkResponse{} }
func (m *ReadChunkResponse) String() string { return proto.CompactTextString(m) }
func (*ReadChunkResponse) ProtoMessage()    {}
func (*ReadChunkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{3}
}

func (m *ReadChunkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadChunkResponse.Unmarshal(m, b)
}
func (m *ReadChunkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadChunkResponse.Marshal(b, m, deterministic)
}
func (m *ReadChunkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadChunkResponse.Merge(m, src)
}
func (m *ReadChunkResponse) XXX_Size() int {
	return xxx_messageInfo_ReadChunkResponse.Size(m)
}
func (m *ReadChunkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadChunkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadChunkResponse proto.InternalMessageInfo

func (m *ReadChunkResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *ReadChunkResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type WriteChunkRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteChunkRequest) Reset()         { *m = WriteChunkRequest{} }
func (m *WriteChunkRequest) String() string { return proto.CompactTextString(m) }
func (*WriteChunkRequest) ProtoMessage()    {}
func (*WriteChunkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{4}
}

func (m *WriteChunkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteChunkRequest.Unmarshal(m, b)
}
func (m *WriteChunkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteChunkRequest.Marshal(b, m, deterministic)
}
func (m *WriteChunkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteChunkRequest.Merge(m, src)
}
func (m *WriteChunkRequest) XXX_Size() int {
	return xxx_messageInfo_WriteChunkRequest.Size(m)
}
func (m *WriteChunkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteChunkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteChunkRequest proto.InternalMessageInfo

func (m *WriteChunkRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *WriteChunkRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *WriteChunkRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type WriteChunkResponse struct {
	Error                int32    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Written              int64    `protobuf:"varint,3,opt,name=written,proto3" json:"written,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteChunkResponse) Reset()         { *m = WriteChunkResponse{} }
func (m *WriteChunkResponse) String() string { return proto.CompactTextString(m) }
func (*WriteChunkResponse) ProtoMessage()    {}
func (*WriteChunkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{5}
}

func (m *WriteChunkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteChunkResponse.Unmarshal(m, b)
}
func (m *WriteChunkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteChunkResponse.Marshal(b, m, deterministic)
}
func (m *WriteChunkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteChunkResponse.Merge(m, src)
}
func (m *WriteChunkResponse) XXX_Size() int {
	return xxx_messageInfo_WriteChunkResponse.Size(m)
}
func (m *WriteChunkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteChunkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteChunkResponse proto.InternalMessageInfo

func (m *WriteChunkResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *WriteChunkResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteChunkResponse) GetWritten() int64 {
	if m != nil {
		return m.Written
	}
	return 0
}

type CompleteFileRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteFileRequest) Reset()         { *m = CompleteFileRequest{} }
func (m *CompleteFileRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteFileRequest) ProtoMessage()    {}
func (*CompleteFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{6}
}

func (m *CompleteFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteFileRequest.Unmarshal(m, b)
}
func (m *CompleteFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteFileRequest.Marshal(b, m, deterministic)
}
func (m *CompleteFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteFileRequest.Merge(m, src)
}
func (m *CompleteFileRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteFileRequest.Size(m)
}
func (m *CompleteFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteFileRequest proto.InternalMessageInfo

func (m *CompleteFileRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

type CompleteFileResponse struct {
	Error                int32    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteFileResponse) Reset()         { *m = CompleteFileResponse{} }
func (m *CompleteFileResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteFileResponse) ProtoMessage()    {}
func (*CompleteFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{7}
}

func (m *CompleteFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteFileResponse.Unmarshal(m, b)
}
func (m *CompleteFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteFileResponse.Marshal(b, m, deterministic)
}
func (m *CompleteFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteFileResponse.Merge(m, src)
}
func (m *CompleteFileResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteFileResponse.Size(m)
}
func (m *CompleteFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteFileResponse proto.InternalMessageInfo

func (m *CompleteFileResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

type DeleteFileRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFileRequest) Reset()         { *m = DeleteFileRequest{} }
func (m *DeleteFileRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteFileRequest) ProtoMessage()    {}
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{8}
}

func (m *DeleteFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFileRequest.Unmarshal(m, b)
}
func (m *DeleteFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFileRequest.Marshal(b, m, deterministic)
}
func (m *DeleteFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFileRequest.Merge(m, src)
}
func (m *DeleteFileRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteFileRequest.Size(m)
}
func (m *DeleteFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFileRequest proto.InternalMessageInfo

func (m *DeleteFileRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

type DeleteFileResponse struct {
	Error                int32    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFileResponse) Reset()         { *m = DeleteFileResponse{} }
func (m *DeleteFileResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteFileResponse) ProtoMessage()    {}
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{9}
}

func (m *DeleteFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFileResponse.Unmarshal(m, b)
}
func (m *DeleteFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFileResponse.Marshal(b, m, deterministic)
}
func (m *DeleteFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFileResponse.Merge(m, src)
}
func (m *DeleteFileResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteFileResponse.Size(m)
}
func (m *DeleteFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFileResponse proto.InternalMessageInfo

func (m *DeleteFileResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

type StoreWholeFileRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreWholeFileRequest) Reset()         { *m = StoreWholeFileRequest{} }
func (m *StoreWholeFileRequest) String() string { return proto.CompactTextString(m) }
func (*StoreWholeFileRequest) ProtoMessage()    {}
func (*StoreWholeFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{10}
}

func (m *StoreWholeFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreWholeFileRequest.Unmarshal(m, b)
}
func (m *StoreWholeFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreWholeFileRequest.Marshal(b, m, deterministic)
}
func (m *StoreWholeFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreWholeFileRequest.Merge(m, src)
}
func (m *StoreWholeFileRequest) XXX_Size() int {
	return xxx_messageInfo_StoreWholeFileRequest.Size(m)
}
func (m *StoreWholeFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreWholeFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreWholeFileRequest proto.InternalMessageInfo

func (m *StoreWholeFileRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *StoreWholeFileRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type StoreWholeFileResponse struct {
	Error                int32    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreWholeFileResponse) Reset()         { *m = StoreWholeFileResponse{} }
func (m *StoreWholeFileResponse) String() string { return proto.CompactTextString(m) }
func (*StoreWholeFileResponse) ProtoMessage()    {}
func (*StoreWholeFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02ff6fede4d297ea, []int{11}
}

func (m *StoreWholeFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreWholeFileResponse.Unmarshal(m, b)
}
func (m *StoreWholeFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreWholeFileResponse.Marshal(b, m, deterministic)
}
func (m *StoreWholeFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreWholeFileResponse.Merge(m, src)
}
func (m *StoreWholeFileResponse) XXX_Size() int {
	return xxx_messageInfo_StoreWholeFileResponse.Size(m)
}
func (m *StoreWholeFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreWholeFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreWholeFileResponse proto.InternalMessageInfo

func (m *StoreWholeFileResponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "revad.filesender.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "revad.filesender.HelloResponse")
	proto.RegisterType((*ReadChunkRequest)(nil), "revad.filesender.ReadChunkRequest")
	proto.RegisterType((*ReadChunkResponse)(nil), "revad.filesender.ReadChunkResponse")
	proto.RegisterType((*WriteChunkRequest)(nil), "revad.filesender.WriteChunkRequest")
	proto.RegisterType((*WriteChunkResponse)(nil), "revad.filesender.WriteChunkResponse")
	proto.RegisterType((*CompleteFileRequest)(nil), "revad.filesender.CompleteFileRequest")
	proto.RegisterType((*CompleteFileResponse)(nil), "revad.filesender.CompleteFileResponse")
	proto.RegisterType((*DeleteFileRequest)(nil), "revad.filesender.DeleteFileRequest")
	proto.RegisterType((*DeleteFileResponse)(nil), "revad.filesender.DeleteFileResponse")
	proto.RegisterType((*StoreWholeFileRequest)(nil), "revad.filesender.StoreWholeFileRequest")
	proto.RegisterType((*StoreWholeFileResponse)(nil), "revad.filesender.StoreWholeFileResponse")
}

func init() { proto.RegisterFile("filesendersvc.proto", fileDescriptor_02ff6fede4d297ea) }

var fileDescriptor_02ff6fede4d297ea = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x5f, 0xcf, 0xd2, 0x30,
	0x14, 0xc6, 0xf3, 0xca, 0xbb, 0x97, 0x70, 0x82, 0x86, 0x15, 0x24, 0xcb, 0x2e, 0xd4, 0xd4, 0x3f,
	0x80, 0x31, 0xbb, 0xd0, 0x6b, 0x63, 0x22, 0xc6, 0x70, 0xbd, 0x19, 0x49, 0x8c, 0x5e, 0x4c, 0x76,
	0x80, 0xc5, 0xb1, 0x62, 0x5b, 0xf0, 0x33, 0xf9, 0x2d, 0xcd, 0xba, 0xe2, 0x0a, 0x2b, 0xdb, 0x7b,
	0xc5, 0x39, 0xed, 0x73, 0x9e, 0xf3, 0x90, 0xfe, 0x32, 0x18, 0xae, 0xd3, 0x0c, 0x05, 0xe6, 0x09,
	0x72, 0x71, 0x5c, 0x05, 0x7b, 0xce, 0x24, 0x23, 0x03, 0x8e, 0xc7, 0x38, 0x09, 0xaa, 0x2b, 0x4a,
	0xa1, 0xbf, 0xc0, 0x2c, 0x63, 0x21, 0xfe, 0x3e, 0xa0, 0x90, 0x84, 0xc0, 0x6d, 0x1e, 0xef, 0xd0,
	0xbb, 0x79, 0x76, 0x33, 0xed, 0x85, 0xaa, 0xa6, 0x33, 0x78, 0xa8, 0x35, 0x62, 0xcf, 0x72, 0x81,
	0xc4, 0x83, 0xee, 0x0e, 0x85, 0x88, 0x37, 0xe8, 0x3d, 0x50, 0xba, 0x53, 0x4b, 0xbf, 0xc2, 0x20,
	0xc4, 0x38, 0x99, 0x6f, 0x0f, 0xf9, 0x2f, 0xc3, 0xb2, 0x58, 0x78, 0xb2, 0x2c, 0x6a, 0x32, 0x86,
	0x3b, 0xb6, 0x5e, 0x0b, 0x94, 0xca, 0xa0, 0x13, 0xea, 0xae, 0x38, 0xcf, 0x30, 0xdf, 0xc8, 0xad,
	0xd7, 0x29, 0xcf, 0xcb, 0x8e, 0xbe, 0x07, 0xd7, 0xf0, 0xd5, 0x31, 0x46, 0xe0, 0x20, 0xe7, 0x8c,
	0x2b, 0x67, 0x27, 0x2c, 0x9b, 0x62, 0x5d, 0x12, 0xcb, 0x58, 0x27, 0x53, 0x35, 0x8d, 0xc0, 0x5d,
	0xf2, 0x54, 0x62, 0x6b, 0x2e, 0xcb, 0xb0, 0x91, 0xb5, 0x63, 0x66, 0xa5, 0xdf, 0x81, 0x98, 0xa6,
	0x8d, 0xa1, 0xae, 0xfd, 0x5f, 0x0f, 0xba, 0x7f, 0x78, 0x2a, 0x25, 0xe6, 0xda, 0xfc, 0xd4, 0xd2,
	0x19, 0x0c, 0xe7, 0x6c, 0xb7, 0xcf, 0x50, 0xe2, 0xe7, 0x34, 0xc3, 0x86, 0xd0, 0xf4, 0x0d, 0x8c,
	0xce, 0xa5, 0x4d, 0x51, 0xe8, 0x04, 0xdc, 0x4f, 0x78, 0x1f, 0xdb, 0xd7, 0x40, 0x4c, 0x61, 0xa3,
	0xe9, 0x07, 0x78, 0x1c, 0x49, 0xc6, 0x71, 0xb9, 0x65, 0x59, 0x9b, 0xb1, 0xf5, 0x85, 0x02, 0x18,
	0x5f, 0x1a, 0x34, 0x2d, 0x7c, 0xfb, 0xf7, 0x16, 0xdc, 0x42, 0x16, 0x29, 0x8c, 0x23, 0xe4, 0xc7,
	0x74, 0x85, 0x64, 0x01, 0x8e, 0x22, 0x95, 0x3c, 0x09, 0x2e, 0x49, 0x0f, 0x4c, 0xcc, 0xfd, 0xa7,
	0x57, 0xef, 0xf5, 0xd6, 0x2f, 0xd0, 0xfb, 0x0f, 0x1c, 0xa1, 0x75, 0xf5, 0x25, 0xe5, 0xfe, 0xf3,
	0x46, 0x8d, 0x76, 0x5d, 0x02, 0x54, 0xc8, 0x10, 0xcb, 0x48, 0x8d, 0x52, 0xff, 0x45, 0xb3, 0x48,
	0x1b, 0xff, 0x80, 0xbe, 0x89, 0x00, 0x79, 0x59, 0x9f, 0xb2, 0xd0, 0xe4, 0xbf, 0x6a, 0x93, 0x55,
	0xb9, 0x2b, 0x14, 0x6c, 0xb9, 0x6b, 0x44, 0xd9, 0x72, 0x5b, 0x68, 0x5a, 0xc1, 0xa3, 0xf3, 0x67,
	0x27, 0x93, 0xfa, 0x9c, 0x95, 0x2c, 0x7f, 0xda, 0x2e, 0x2c, 0x97, 0x7c, 0xec, 0x7e, 0x73, 0xd4,
	0xe7, 0xef, 0xe7, 0x9d, 0xfa, 0x79, 0xf7, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x0e, 0xca, 0x41,
	0x1c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileSenderServiceClient is the client API for FileSenderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileSenderServiceClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	ReadChunk(ctx context.Context, in *ReadChunkRequest, opts ...grpc.CallOption) (*ReadChunkResponse, error)
	WriteChunk(ctx context.Context, in *WriteChunkRequest, opts ...grpc.CallOption) (*WriteChunkResponse, error)
	CompleteFile(ctx context.Context, in *CompleteFileRequest, opts ...grpc.CallOption) (*CompleteFileResponse, error)
	DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error)
	StoreWholeFile(ctx context.Context, in *StoreWholeFileRequest, opts ...grpc.CallOption) (*StoreWholeFileResponse, error)
}

type fileSenderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileSenderServiceClient(cc grpc.ClientConnInterface) FileSenderServiceClient {
	return &fileSenderServiceClient{cc}
}

func (c *fileSenderServiceClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/revad.filesender.FileSenderService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSenderServiceClient) ReadChunk(ctx context.Context, in *ReadChunkRequest, opts ...grpc.CallOption) (*ReadChunkResponse, error) {
	out := new(ReadChunkResponse)
	err := c.cc.Invoke(ctx, "/revad.filesender.FileSenderService/ReadChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSenderServiceClient) WriteChunk(ctx context.Context, in *WriteChunkRequest, opts ...grpc.CallOption) (*WriteChunkResponse, error) {
	out := new(WriteChunkResponse)
	err := c.cc.Invoke(ctx, "/revad.filesender.FileSenderService/WriteChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSenderServiceClient) CompleteFile(ctx context.Context, in *CompleteFileRequest, opts ...grpc.CallOption) (*CompleteFileResponse, error) {
	out := new(CompleteFileResponse)
	err := c.cc.Invoke(ctx, "/revad.filesender.FileSenderService/CompleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSenderServiceClient) DeleteFile(ctx context.Context, in *DeleteFileRequest, opts ...grpc.CallOption) (*DeleteFileResponse, error) {
	out := new(DeleteFileResponse)
	err := c.cc.Invoke(ctx, "/revad.filesender.FileSenderService/DeleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSenderServiceClient) StoreWholeFile(ctx context.Context, in *StoreWholeFileRequest, opts ...grpc.CallOption) (*StoreWholeFileResponse, error) {
	out := new(StoreWholeFileResponse)
	err := c.cc.Invoke(ctx, "/revad.filesender.FileSenderService/StoreWholeFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileSenderServiceServer is the server API for FileSenderService service.
type FileSenderServiceServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
	ReadChunk(context.Context, *ReadChunkRequest) (*ReadChunkResponse, error)
	WriteChunk(context.Context, *WriteChunkRequest) (*WriteChunkResponse, error)
	CompleteFile(context.Context, *CompleteFileRequest) (*CompleteFileResponse, error)
	DeleteFile(context.Context, *DeleteFileRequest) (*DeleteFileResponse, error)
	StoreWholeFile(context.Context, *StoreWholeFileRequest) (*StoreWholeFileResponse, error)
}

// UnimplementedFileSenderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileSenderServiceServer struct {
}

func (*UnimplementedFileSenderServiceServer) Hello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedFileSenderServiceServer) ReadChunk(ctx context.Context, req *ReadChunkRequest) (*ReadChunkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadChunk not implemented")
}
func (*UnimplementedFileSenderServiceServer) WriteChunk(ctx context.Context, req *WriteChunkRequest) (*WriteChunkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteChunk not implemented")
}
func (*UnimplementedFileSenderServiceServer) CompleteFile(ctx context.Context, req *CompleteFileRequest) (*CompleteFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteFile not implemented")
}
func (*UnimplementedFileSenderServiceServer) DeleteFile(ctx context.Context, req *DeleteFileRequest) (*DeleteFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFile not implemented")
}
func (*UnimplementedFileSenderServiceServer) StoreWholeFile(ctx context.Context, req *StoreWholeFileRequest) (*StoreWholeFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreWholeFile not implemented")
}

func RegisterFileSenderServiceServer(s *grpc.Server, srv FileSenderServiceServer) {
	s.RegisterService(&_FileSenderService_serviceDesc, srv)
}

func _FileSenderService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSenderServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/revad.filesender.FileSenderService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSenderServiceServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSenderService_ReadChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSenderServiceServer).ReadChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/revad.filesender.FileSenderService/ReadChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSenderServiceServer).ReadChunk(ctx, req.(*ReadChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSenderService_WriteChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSenderServiceServer).WriteChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/revad.filesender.FileSenderService/WriteChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSenderServiceServer).WriteChunk(ctx, req.(*WriteChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSenderService_CompleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSenderServiceServer).CompleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/revad.filesender.FileSenderService/CompleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSenderServiceServer).CompleteFile(ctx, req.(*CompleteFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSenderService_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSenderServiceServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/revad.filesender.FileSenderService/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSenderServiceServer).DeleteFile(ctx, req.(*DeleteFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSenderService_StoreWholeFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreWholeFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSenderServiceServer).StoreWholeFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/revad.filesender.FileSenderService/StoreWholeFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSenderServiceServer).StoreWholeFile(ctx, req.(*StoreWholeFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSenderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "revad.filesender.FileSenderService",
	HandlerType: (*FileSenderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _FileSenderService_Hello_Handler,
		},
		{
			MethodName: "ReadChunk",
			Handler:    _FileSenderService_ReadChunk_Handler,
		},
		{
			MethodName: "WriteChunk",
			Handler:    _FileSenderService_WriteChunk_Handler,
		},
		{
			MethodName: "CompleteFile",
			Handler:    _FileSenderService_CompleteFile_Handler,
		},
		{
			MethodName: "DeleteFile",
			Handler:    _FileSenderService_DeleteFile_Handler,
		},
		{
			MethodName: "StoreWholeFile",
			Handler:    _FileSenderService_StoreWholeFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filesendersvc.proto",
}
